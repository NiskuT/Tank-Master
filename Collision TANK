#Cr√©ation de la map
filin = open('MAP2_2.txt','r')
E=[]
for i in range(675):
    sl=[]
    c = filin.readline()
    #print(c)
    for j in range(len(c)):
        if (c[j] != ' ') and (c[j]!='\n'):
            sl.append(int(c[j]))
    E.append(sl)
filin.close()


#Definition colision tank et integration a la map de la position
def tank_colision(x,y,E):
    boom = 0
    for i in range (56):
        if E[y1][i+x1]==1:
            boom=1
        else:
            if E[y1+56][i+x1]==1:
                boom=1
            else:
                E[y1+56][i+x1]=2
                E[y1][i+x1]=2

    if boom != 0:
        for i in range (56):
            if E[i+y1][x1]==1:
                boom=1
            else:
                if E[i+y1][x1+56]==1:
                    boom=1
                else:
                    E[i+y1][x1]=2
                    E[i+y1][x1+56]=2
    if boom==1:
        print(boom,"x1= ",x1," et y1= ",y1)
    return(boom,E)

#Definition colision du missile
def missile_colision(x,y,angle,E):
    longueur=int(cos(90-angle)*6+cos(angle)*16)
    largeur=int(sin(90-angle)*6+sin(angle)*16)
    if angle < 90:
        if E[largeur+y][longueur+x]==1:
            boom=1
        else :
            if E[largeur+y][longueur+x]==2:
                boom=1
                tank=2
    else:
        if angle <180:
            if E[largeur+y][x]==1:
                boom=1
            else :
                if E[largeur+y][x]==2:
                    boom=1
                    tank=2
        else:
            if angle <270:
                if E[y][x]==1:
                    boom=1
                else :
                    if E[y][x]==2:
                        boom=1
                        tank=2
            else:
                if angle <360:
                    if E[y][longueur+x]==1:
                        boom=1
                    else :
                        if E[y][longueur+x]==2:
                            boom=1
                            tank=2
    return(boom,tank)
